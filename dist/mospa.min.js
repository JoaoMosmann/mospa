var EventHandler=function(){var a=[];this.bind=function(b,c){if(void 0===c)throw new Error("The second parameter of bind must be passed.");a.push({type:b,callback:c})},this.unbind=function(b,c){for(var d=0;d<a.length;d++)null===a[d]||a[d].type!=b||a[d].callback!=c&&void 0!==c||(a[d]=null)},this.trigger=function(b,c){void 0===c&&(c={});for(var d={stopped:!1,stop:function(){this.stopped=!0},data:c},e=0;e<a.length&&!d.stopped;e++)if(null!==a[e]&&a[e].type==b){var f=a[e].callback.call(this,d);if(f===!1)break}}},MosApplication=function(a){EventHandler.call(this),console.log("MosApplication :: config",a);var b=[],c=this,d=null,e=null;this.addPage=function(c){if(console.log("MosApplication :: addPage :: config",a),c.constructor!=MosPage)throw new Error("The addPage first parameter must be a MosPage instance.");if(b.indexOf(c)>-1)throw new Error("This page is already in this application.");for(var d in b)if(b[d].getSlug()==c.getSlug())throw new Error('The slug "'+c.getSlug()+'" is already used in this application ('+a.id+").");return c.application=this,b.push(c),!0},this.getPages=function(){return b.concat()},this.getCurrentPage=function(){return e},this.setCurrentPage=function(a){console.log("page "+a.getSlug()+" setted as currentPage"),e=a},window.addEventListener("hashchange",function(){var a=location.hash.split("/").slice(1);if(null!=d&&a.join("/")==d.join("/"));else if(null!=d&&a[0]==d[0])e.trigger("hashchange",a);else for(var f in b)if(b[f].getSlug()==a[0]){d=a,c.setCurrentPage(b[f]);break}},!1)};MosApplication.prototype.createPage=function(a,b){console.log("MosApplication :: createPage :: config",a);var c=new MosPage(a);return"function"==typeof b&&b.call(c,a),this.addPage(c),c};var MosPage=function(a){EventHandler.call(this);var b,c;if(void 0===a)throw new Error("A configuration objective is required to create a new MosPage");if(void 0===a.slug)throw new Error("The config slug property is required");if(void 0===a.domElement)throw new Error("The config domElement property is required");this.application=null,b=a.slug,c=a.domElement,this.getSlug=function(){return b},this.getDomElement=function(){return c}},MosScrollApp=function(a){this.constructor.call(this,a),console.log("MosScrollApp :: config",a)};MosScrollApp.prototype=Object.create(MosApplication.prototype),"function"!=typeof Object.create&&!function(){var a=function(){};Object.create=function(b){if(arguments.length>1)throw Error("Second argument not supported");if(null===b)throw Error("Cannot set a null [[Prototype]]");if("object"!=typeof b)throw TypeError("Argument must be an object");return a.prototype=b,new a}}();var mospa=function(){return{createApplication:function(a,b,c){var d;"scrollapp"==a&&(d=MosScrollApp);var e={type:a,id:b},f=new d(e);return"function"==typeof c&&c.call(f,e),f}}}();